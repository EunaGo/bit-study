<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- sql 설정 : sql문, 반환 타입, 파라미터 설정 -->

<mapper namespace="com.openproject.mvc.dao.MemberDaoInterface">

	<!-- select의 결과를 객체에 바인딩 해주는 역할 : 테이블의 컬럼명과 자바 빈즈 변수의 이름이 틀린경우 -->
	<resultMap id="resultMember"
		type="com.openproject.mvc.model.Member">
		<id property="idx" column="idx" />
		<result property="uid" column="uid" />
		<result property="upw" column="upw" />
		<result property="uname" column="uname" />
		<result property="uphoto" column="uphoto" />
	</resultMap>
	
	<select id="selectTotalList" resultMap="resultMember">
		select * from test.member order by idx desc
	</select>
	
	<select id="selectTotalListXml" resultType="com.openproject.mvc.model.MemberXML">
		select * from test.member order by idx desc
	</select>

	<select id="selectByIdx" resultType="com.openproject.mvc.model.Member">
		select * from test.member where idx=#{id}
			</select>

	<select id="selectById"
		resultType="com.openproject.mvc.model.Member">
		select * from test.member where uid=#{param1} and
		upw=#{param2}
	</select>

	<!-- 검색: id, name, id or name map.put("searchType","id") name, both map.put("keyword","cool") -->

	<!-- map >>> HashMap -->
	<select id="totalCount" parameterType="map" resultType="int">
		<!-- #{search.searchType} -->
		select count(*) from test.member

		<include refid="listSearch"/>	

	</select>
	
	<select id="selectMemberList" parameterType="map" resultMap="resultMember">
		select * from test.member
		
		<include refid="listSearch"/>
		
		limit #{startRow},#{endRow}
		
	</select>
	
	<sql id="listSearch">
		
		<where>
			<if test="searchType != null">
				<if test="searchType == 'both'">
					<include refid="whereID"/>
					<include refid="whereName"/>
				</if>
				<if test="searchType == 'id'">
					<include refid="whereID"/>
				</if>
				<if test="searchType == 'name'">
					<include refid="whereName"/>
				</if>
			</if>
		</where>
	
	</sql>
	

	<sql id="whereID">
		or uid like concat('%',#{keyword},'%')
	</sql>

	<sql id="whereName">
		or uname like concat('%',#{keyword},'%')
	</sql>

	<insert id="insertMember"
		parameterType="com.openproject.mvc.model.Member"
		useGeneratedKeys="true" keyProperty="idx">
		INSERT INTO test.member (uid, upw,
		uname, uphoto ) VALUES (#{uid},#{upw},#{uname},#{uphoto})
	</insert>

</mapper>